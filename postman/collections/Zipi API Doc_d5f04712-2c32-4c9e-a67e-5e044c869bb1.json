{
	"info": {
		"_postman_id": "df21dd60-0a06-4f3e-8cb5-faaf6359e9dc",
		"name": "Zipi API Doc",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "v1/users",
			"item": [
				{
					"name": "{user Id}",
					"item": [
						{
							"name": "Get user by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5057a288-ba08-479c-92f1-6966db360728",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"const deleteUserRequest = {",
											"    url: `${pm.environment.get('baseUrl')}/v1/users/${pm.collectionVariables.get(\"userId\")}`,",
											"    method: 'DELETE',",
											"    header: { 'content-type': 'application/json' }",
											"}",
											"",
											"pm.sendRequest(deleteUserRequest, function (err, response) {",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a7765386-d387-43fa-a576-c8644c210ea3",
										"exec": [
											"const createUserRequest = {",
											"    url: `${pm.environment.get('baseUrl')}/v1/users`,",
											"    method: 'POST',",
											"    header: { 'content-type': 'application/json' },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({\"name\": \"Ruben\", \"age\": 39})",
											"    }",
											"}",
											"",
											"pm.sendRequest(createUserRequest, function (err, response) {",
											"    const userId = response.json().userId;",
											"    pm.collectionVariables.set(\"userId\", userId);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "eafcff6b-16fb-4671-9331-4960ffafe46a",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/users/{{userId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"users",
										"{{userId}}"
									],
									"variable": [
										{
											"key": "userId",
											"value": "ipsum",
											"type": "string",
											"description": "(Required) ",
											"id": "4ee75820-0afe-44ae-b649-b3c5d73b060d"
										}
									]
								}
							},
							"response": [
								{
									"id": "e1b48460-0dd1-4228-bf2d-c0e3b5718502",
									"name": "Get user by id",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/users/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"users",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n \"name\": \"<string>\",\n \"age\": 59992018.70283386,\n \"userId\": \"622ed031-1ca8-1e8b-267b-ba69a116dc52\"\n}"
								},
								{
									"id": "22510d11-682c-4e30-b392-9125235dde9c",
									"name": "User not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/users/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"users",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n \"code\": \"urn:uuid:7c053551-8d60-0414-d83b-d4c99f6585de\",\n \"message\": \"<string>\",\n \"status\": -42131291\n}"
								}
							],
							"variable": [
								{
									"id": "4ee75820-0afe-44ae-b649-b3c5d73b060d",
									"key": "userId",
									"value": "ipsum",
									"type": "string",
									"description": "(Required) "
								}
							]
						},
						{
							"name": "Update user by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e24535b7-aeef-48c2-9714-ca0c1d05e3f2",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e1d19823-003f-4997-b84c-6d967b1054da",
										"exec": [
											"const createUserRequest = {",
											"    url: `${pm.environment.get('baseUrl')}/v1/users`,",
											"    method: 'POST',",
											"    header: { 'content-type': 'application/json' },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({\"name\": \"Ruben\", \"age\": 39})",
											"    }",
											"}",
											"",
											"pm.sendRequest(createUserRequest, function (err, response) {",
											"    const userId = response.json().userId;",
											"    pm.collectionVariables.set(\"userId\", userId);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "48ffa009-a3e6-48e2-bee7-b5ed063e7d7b",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \"name\": \"Luis\",\n \"age\": 41\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/users/{{userId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"users",
										"{{userId}}"
									],
									"variable": [
										{
											"id": "249bf5b5-e966-409e-aa8b-1536d1fa2b0d",
											"key": "userId",
											"value": "ipsum",
											"type": "string",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "7c6cb342-756d-4ffa-bec3-85a19270c07c",
									"name": "Update user by id",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/users/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"users",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "f784111a-c530-405d-908e-812aba5b25ce",
									"name": "User not found",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/users/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"users",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n \"code\": \"urn:uuid:7c053551-8d60-0414-d83b-d4c99f6585de\",\n \"message\": \"<string>\",\n \"status\": -42131291\n}"
								}
							],
							"variable": [
								{
									"id": "249bf5b5-e966-409e-aa8b-1536d1fa2b0d",
									"key": "userId",
									"value": "ipsum",
									"type": "string",
									"description": "(Required) "
								}
							]
						},
						{
							"name": "Delete user by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "712497f9-8c16-4b65-b51f-e5b245e97c75",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "265dabbb-6674-4ceb-9da3-c12258365df7",
										"exec": [
											"const createUserRequest = {",
											"    url: `${pm.environment.get('baseUrl')}/v1/users`,",
											"    method: 'POST',",
											"    header: { 'content-type': 'application/json' },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({\"name\": \"Ruben\", \"age\": 39})",
											"    }",
											"}",
											"",
											"pm.sendRequest(createUserRequest, function (err, response) {",
											"    const userId = response.json().userId;",
											"    pm.collectionVariables.set(\"userId\", userId);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "6931d447-e30d-44de-b24b-7248ff4f5249",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/users/{{userId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"users",
										"{{userId}}"
									],
									"variable": [
										{
											"id": "42a33ab5-df55-427b-ba7b-5d3ca2feef08",
											"key": "userId",
											"value": "ipsum",
											"type": "string",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "b2b45e0f-07ba-45cc-bd8c-d3f5774707a5",
									"name": "Delete user by id",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/users/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"users",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "b622e191-c84d-49d4-9f17-7c43e2249663",
									"name": "User not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/users/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"users",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n \"code\": \"urn:uuid:7c053551-8d60-0414-d83b-d4c99f6585de\",\n \"message\": \"<string>\",\n \"status\": -42131291\n}"
								}
							],
							"variable": [
								{
									"id": "42a33ab5-df55-427b-ba7b-5d3ca2feef08",
									"key": "userId",
									"value": "ipsum",
									"type": "string",
									"description": "(Required) "
								}
							]
						}
					],
					"id": "bac28f7f-b688-4e02-bd42-11ee4adacc0a",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9e112959-8b7d-41c9-976c-9a1ea9cd1fa7",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "47d66942-5694-4b14-9130-a8b7a521e87a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Create user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8ddc593f-afa0-43d3-ac33-6b30936a5c59",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const response = pm.response.json();",
									"",
									"pm.collectionVariables.set(\"userId\", response.userId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "95fed537-f7a2-46e2-a2e4-e6539942775a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \"name\": \"Ruben\",\n \"age\": 39\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/users/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								""
							]
						}
					},
					"response": [
						{
							"id": "8563f914-8499-4342-afd1-e78f7ab8a1e0",
							"name": "Create user",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"age\": \"<number>\",\n  \"userId\": \"<uuid>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/users/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"users",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"userId\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get all users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93c01c3a-5faf-4bec-85d9-ad6998b04c84",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"id": "9d59a59c-72fa-48e5-a044-8dbb7821f137",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/users/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								""
							]
						}
					},
					"response": [
						{
							"id": "1200a0d4-3c9c-4b9b-ae09-011948986cd6",
							"name": "Get all users",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/users/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"users",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n \"users\": [\n  {\n   \"name\": \"<string>\",\n   \"age\": -83831507.62514888,\n   \"userId\": \"5eb86681-ecd3-6616-f67d-999b5629ef61\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"age\": 97922201.54089776,\n   \"userId\": \"9b21d464-87cd-6859-05dd-eb3c2af92b57\"\n  }\n ]\n}"
						},
						{
							"id": "380474b1-1338-45dd-b439-f6ecb3ec06c5",
							"name": "Unexpected error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/users/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"users",
										""
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n \"code\": \"urn:uuid:7c053551-8d60-0414-d83b-d4c99f6585de\",\n \"message\": \"<string>\",\n \"status\": -42131291\n}"
						}
					]
				}
			],
			"id": "bace1d39-f223-476d-8a42-46217d69659a"
		},
		{
			"name": "Create insurance to user",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f6c041a8-deda-4dd0-a7cd-41bfa27e56fb",
						"exec": [
							"const createUserRequest = {",
							"    url: `${pm.environment.get('baseUrl')}/v1/users`,",
							"    method: 'POST',",
							"    header: { 'content-type': 'application/json' },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({\"name\": \"Ruben\", \"age\": 39})",
							"    }",
							"}",
							"",
							"pm.sendRequest(createUserRequest, function (err, response) {",
							"    const userId = response.json().userId;",
							"    pm.collectionVariables.set(\"userId\", userId);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "4573892a-8264-4c02-89d5-9c3c74267719",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"const deleteUserRequest = {",
							"    url: `${pm.environment.get('baseUrl')}/v1/users/${pm.collectionVariables.get(\"userId\")}`,",
							"    method: 'DELETE',",
							"    header: { 'content-type': 'application/json' }",
							"}",
							"",
							"pm.sendRequest(deleteUserRequest, function (err, response) {",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "347f584b-a05f-4e34-8c3a-1fb11e59e7a3",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"type\": \"Home\",\n    \"amount\": \"1000€\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/v1/users/{{userId}}/insurances/create",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"users",
						"{{userId}}",
						"insurances",
						"create"
					],
					"variable": [
						{
							"id": "1a9e5cc5-5bc2-422c-bfe4-7ba9c82d6ece",
							"key": "userId",
							"value": "magna anim pariatur",
							"type": "string",
							"description": "(Required) "
						}
					]
				}
			},
			"response": [
				{
					"id": "131b69a5-4a58-4095-9653-2484830d00c6",
					"name": "Create insurance to user",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"velit\",\n  \"amount\": \"adipisicing pariatur\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/users/:userId/insurances/create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								":userId",
								"insurances",
								"create"
							],
							"variable": [
								{
									"key": "userId",
									"value": "et do non",
									"description": "(Required) "
								}
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"responseTime": null,
					"body": "{\n  \"insuranceId\": \"ex nulla\"\n}"
				}
			],
			"variable": [
				{
					"id": "1a9e5cc5-5bc2-422c-bfe4-7ba9c82d6ece",
					"key": "userId",
					"value": "magna anim pariatur",
					"type": "string",
					"description": "(Required) "
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "7d8f0128-b948-45dc-a789-ab1ab5f5c7bb",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "cb513a18-171d-4316-95ed-f7dc76be7a3e",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "7bb87365-41d2-46c1-bae8-4bd331d92d3d",
			"key": "userId",
			"value": "",
			"type": "any"
		}
	]
}